#include <iostream>

#include <vector>

#include <list>

#include <deque>

#include <stack>

using namespace std;


int main()
{
	//якщо ми явно не вказуємо стеку, який контейнер він має використовувати в своїй основі,
	//то за замовчуванням він використовуватиме контейнер deque
	stack<int> st;

	//явно вказуємо який контейнер використовуватиметься в основі стеку (контейнеру stack)
	//stack<int, vector<int>> s1;
	//stack<int, list<int>> s2;
	//stack<int, deque<int>> s3;


	//метод push - спочатку створює копію об"єкта, а потім переміщує цю копію в колекцію
	st.push(2);
	st.push(431);
	st.push(3);
	//метод emplace - створює об"єкт, який ми поміщаємо в стек безпоседньо вже в колекції, 
	//без копіювання і переміщення 
	//метод emplace - додано в новішому стандарті і працює швидше
	//проте результат роботи методів push i emplace буде таким самим
	st.emplace(9);

	//метод size - повертає кількість елементів в стеку
	st.size();

	//метод empty - перевіряє чи є в контейнері елементи
	//повертає true - якщо контейнер пустий, якщо контейнер не пустий, то повертає false
	cout << "st.empty() : " << st.empty() << endl << endl;

	//метод pop - дозволяє вилучити елемент (елемент, що був поміщений в стек останнім, в верху стеку, бо це стек)
	//і не повертає ніяких значень
	//st.pop();

	//метод top - дозволяє подивитись, який елемент знаходиться на вершині стеку,
	//	повертає силку на цей елемент (елемент (принаймні int) можна змінити) (і НЕ видаляє цей елемент)
	cout << "st.top() : " << st.top() << endl << endl;

	st.pop();
	cout << "st.pop()" << endl << endl;
	cout << "st.top() : " << st.top() << endl << endl;


	//метод _Get_container - повертає "сирий" контейнер, який був покладений в основу стеку (конкретного об"єкту)
	//за допомогою методу _Get_container можна позбутись всіх обмежень накладених контейнером stack
	auto a = st._Get_container();
	//по суті в змінну a було поміщено оригінальний контейнер deque, яку вилучили із стеку
	cout << "a[2] = " << a[2] << endl << endl;
	//оператор [] - не працюватиме для стеку в основі якого лежить контейнер list


	while (!st.empty())
	{
		cout << st.top() << endl;
		st.pop();
	}


	return 0;
}