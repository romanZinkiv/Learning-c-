#include <iostream>
#include <forward_list>
using namespace std;

//forward_list - це реалізація однозв"язного списку в бібліотеці STL


int main()
{

	forward_list<int> fl = { 131,94,494 };
	fl.push_front(1);
	fl.push_front(4);

	forward_list<int>::iterator it = fl.begin();
	//таке можна зробити
	++it;
	//таке зробити не можна (оп. не перегружена) і forward_list - реалізація однозв"язного списку,
	// а однозв"язний список такого не вміє
	//--it;
	cout << "*it = " << *it << endl;


	//метод insert_after(arg1, arg2) - вставляє елемент arg2, після елементу на який вказує ітератор arg1, 
	//тобто вставляє на позицію arg1+1. існування такого методу (а не звичайного insert) зумовлено тим, 
	//що вони не зберігають адрес минулого елементу (і ми не можемо змінити його вказівник(куди він вказує)),
	//а лише адрес наступного елементу (той адрес присвоїться вказівнику нового(новоствореного) елемента),
	//а елемент після якого відбудеться ставка вказуватиме на (новий) елемент, який вставляється
	fl.insert_after(it, 3333);
	++it;
	++it;
	//
	//метод erase_after(arg) - видаляє елемент(index:arg+1) після того елементу на який вказує ітератор arg
	fl.erase_after(it);

	for (auto el : fl)
	{
		cout << el << endl;
	}

	//метод before_begin() - повертає константний ітератор (вказівник) (щоб не могли змінити), 
	//на елемент, що передує початку колекції. він портібен для того, щоб можна було 
	//за допомогою методів insert_after() і erase_after() взаємодіяти з 
	//першим (нульовим) елементом колекції
	//але значно легше користуватись методами push_front і pop_front


	return 0;
}